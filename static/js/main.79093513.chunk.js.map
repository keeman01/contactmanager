{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","console","log","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Axios","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79093513.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact =>\n                    contact.id !== action.payload)\n            }\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact =>\n                    contact.id === action.payload.id ? (contact = action.payload) : contact)\n            }\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => {\n            this.setState(state => reducer(state, action))\n        }\n    };\n\n    async componentDidMount() {\n        const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n        this.setState({contacts: res.data});\n        \n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n            {this.props.children}\n            </Context.Provider>\n        )\n    }\n\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\n\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try{\n      console.log(\"working...\");  \n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n      \n\n    } catch(e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n    \n      \n\n\n    \n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i \n                  className=\"fas fa-pencil-alt\"\n                  style={{\n                    cursor: 'pointer',\n                    float: 'right',\n                    color: 'black',\n                    marginRight: '1rem'\n                  }}>\n                  </i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">{email}</li>\n                  <li className=\"list-group-item\">{phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n    \n    \n    render() {\n        return (\n            <Consumer> \n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\">Contact</span> List\n                            </h1>\n                            {contacts.map(contact =>\n                                <Contact\n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            )}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n\n    }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n  return (\n      <div className=\"form-group\">\n          <label htmlFor={name}>{label}</label>\n          <input\n              type={type}\n              name={name}\n              className={classnames('form-control form-control-lg', {'is-invalid': error})}\n              placeholder={placeholder}\n              value={value}\n              onChange={onChange}\n          />\n          {error &&\n          <div className=\"invalid-feedback\">\n            {error}\n          </div>}\n\n      </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from '../layout/TextInputGroup';\n//import uuid from 'uuid';\nimport axios from 'axios';\n\n\nclass AddContact extends Component {\n    state = {\n         name: '',\n         email: '',\n         phone: '',\n         errors: {}\n    };\n\n    onChange = e => this.setState({[e.target.name]: e.target.value})\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        \n        const { name, email, phone } = this.state;\n\n        // Check for errors\n\n        if(name === '') {\n            this.setState({errors: { name: 'Name is required' }});\n            return;\n        }\n        \n        if(email === '') {\n            this.setState({ errors: { email: 'Email is required' } });\n            return;\n        } \n\n        if(phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } });\n            return;\n        } \n\n        const newContact = {\n            name,\n            email,\n            phone\n        };\n\n        const res = await axios.post(\"https://jsonplaceholder.typicode.com/users\", newContact);\n        dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n            \n\n        \n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n        \n        this.props.history.push('/');\n    };\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className='card mb-3'>\n                            <div className='card-header'>Add Contact\n                </div>\n                            <div className='card-body'>\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                   \n\n                            <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    \n                                    <input type=\"submit\" value=\"Add Contact\"\n                                        className=\"btn btn-light btn-block\" />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n\n    }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from '../layout/TextInputGroup';\nimport Axios from 'axios';\n//import uuid from 'uuid';\nimport axios from 'axios';\n\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await Axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updContact = {\n        name,\n        email,\n        phone\n    } \n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Update Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n    <div className=\"container\">\n      <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n      <div>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\n          </li>\n          <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>   Add</Link>\n          </li>\n          <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>     About</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n    </nav>\n  );\n};\n\n\nHeader.defaultProps = {\n  branding: \"My Contact Manager\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\n\nexport default Header;","import React, { Component } from 'react'\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"display-4\">About Contact Manager</h1>\n        <p className=\"lead\">Simple App to manage contacts</p>\n        <p className=\"text-secondary\">Version 1.0.0</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n        <p className=\"lead\">Sorry, that page does not exist</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\n class Test extends Component {\n  \n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data => this.setState({\n        title: data.title,\n        body: data.body\n      }));\n  }\n\n  // componentWillMount() {\n  //   console.log(\"componentWillMount...\");\n  // }\n  // componentDidUpdate() {\n  //   console.log(\"componentDidUpdate...\");\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\n\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport NotFound from './components/pages/NotFound';\nimport Test from \"./components/test/Test\";\n\n\nclass App extends Component {\n  render() {\n    return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component= {Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>      \n        </div>\n      </Router>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}